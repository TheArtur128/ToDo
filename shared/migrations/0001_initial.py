# Generated by Django 4.2.6 on 2023-10-16 13:27

from django.db import migrations, models
import django.db.models.deletion
import shared.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=128)),
                ('is_forced', models.BooleanField(default=False)),
                ('rgb_color', models.CharField(max_length=6)),
                ('x', models.PositiveIntegerField()),
                ('y', models.PositiveIntegerField()),
                ('root', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='shared.task')),
            ],
            bases=(shared.models._VisualizableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TaskSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_removable_on_completion', models.BooleanField(default=True)),
                ('failure_time', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            bases=(shared.models._VisualizableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.PositiveIntegerField()),
                ('y', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('settings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shared.tasksettings')),
                ('tasks', models.ManyToManyField(related_name='students', to='shared.task')),
            ],
            bases=(shared.models._VisualizableMixin, models.Model),
        ),
        migrations.AddField(
            model_name='task',
            name='settings',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shared.tasksettings'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('email', models.EmailField(max_length=154, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('default_settings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shared.tasksettings')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('tasks', models.ManyToManyField(blank=True, to='shared.task')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('zones', models.ManyToManyField(blank=True, to='shared.zone')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
